[package]
name = "flax"
version = "0.8.0"
edition = "2021"
authors = ["Tei Leelo Roberts <ten3roberts@gmail.com>"]
description = "An ergonomic archetypical ECS"
documentation = "https://docs.rs/flax"
repository = "https://github.com/ten3roberts/flax"
keywords = ["ecs", "hierarchy", "entity"]
categories = ["data-structures", "game-engines", "no-std"]
license = "MIT"

[workspace]
members = ["flax-derive", "asteroids"]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
flax-derive = { path = "./flax-derive", version = "0.8.0", optional = true }

flume = { version = "0.11.0", default-features = false, optional = true }

anyhow = { version = "1.0.75", default-features = false }
atomic_refcell = { version = "0.1.13", default-features = false }
bitflags = { version = "2.4.1", default-features = false }
erased-serde = { version = "0.4.5", features = [], optional = true }
inventory = { version = "0.3", default-features = true , optional = true }
itertools = "0.14.0"
once_cell = "1.18.0"
puffin = { version = "0.19", optional = true }
rayon = { version = "1.8.0", default-features = false, optional = true }
serde = { version = "1.0.190", features = ["derive"], optional = true }
smallvec = { version = "1.11.1", default-features = false }
tokio = { version = "1.33.0", default-features = false, features = [ "sync", ], optional = true }
tracing = { version = "0.1.40", optional = true }
tynm = "0.1.9"
bytemuck = { version ="1.21", features = ["derive"], optional = true }

[dev-dependencies]
tokio = { version = "1.33.0", features = ["test-util", "macros"] }
futures = "0.3.29"
itertools = { version = "0.14.0", default-features = false }
tracing-subscriber = { version = "0.3.17", features = ["env-filter"] }
serde_json = "1.0.107"
glam = { version = "0.30.0", features = ["rand", "serde", "scalar-math"] }
rand = "0.9.0"
tracing-tree = "0.4.0"
bincode = "1.3.3"
ron = "0.8.1"
tracing = "0.1.40"
criterion = "0.5.1"
pretty_assertions = "1.4.0"

[profile.bench]
debug = true

[features]
std = ["itertools/use_std", "itertools/use_alloc", "anyhow/std", "inventory"]
default = ["std", "rayon", "flume"]
serde = ["dep:serde", "erased-serde"]
derive = ["flax-derive"]
bytemuck = ["dep:bytemuck", "bitflags/bytemuck"]

[[example]]
name = "guide"
required-features = ["std"]
path = "./examples/guide.rs"

[[example]]
name = "query"
required-features = ["std"]
path = "./examples/guide/query.rs"

[[example]]
name = "builder"
path = "./examples/guide/builder.rs"
required-features = ["std"]

[[example]]
name = "query_advanced"
path = "./examples/guide/query_advanced.rs"
required-features = ["std"]

[[example]]
name = "relations"
path = "./examples/guide/relations.rs"
required-features = ["std"]

[[example]]
name = "commandbuffer"
path = "./examples/guide/commandbuffer.rs"
required-features = ["std"]

[[example]]
name = "serialize"
path = "./examples/guide/serialize.rs"
required-features = ["std"]

[[example]]
name = "change_detection"
path = "./examples/guide/change_detection.rs"
required-features = ["std"]

[[example]]
name = "query_basic"
path = "./examples/query/basic.rs"
required-features = ["std"]

[[example]]
name = "graphs"
path = "./examples/query/graphs.rs"
required-features = ["std"]

[[example]]
name = "transform"
path = "./examples/query/transform.rs"
required-features = ["std"]


[[example]]
name = "systems"
path = "./examples/guide/systems.rs"
required-features = ["std", "rayon"]

[[example]]
name = "springs"
path = "./examples/guide/springs.rs"
required-features = ["std"]

[[bench]]
name = "benchmarks"
harness = false
required-features = ["std"]

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]
